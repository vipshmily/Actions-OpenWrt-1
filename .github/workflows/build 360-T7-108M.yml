################################################
# Description: Build OpenWrt for 360-T7-108M using GitHub Actions
# Uses:
#    padavanonly /immortalwrt-mt798x from padavanonly
################################################

name: build 360-T7-108M

permissions: write-all

on:
  repository_dispatch:
    types: [Source_Code_Update_padavanonly, Package_Luci_Update]
  workflow_dispatch:
    inputs:
      USE_MTWIFI_CFG:
        description: '使用 mtwifi-cfg 无线控制界面'
        required: false
        default: true
        type: boolean
      USE_NX30PRO_EEPROM:
        description: '使用 nx30pro eeprom'
        required: false
        default: false
        type: boolean
      USE_52MHZ:
        description: '使用 dts 最大52MHz闪存频率'
        required: false
        default: false
        type: boolean
      SSH:
        description: 'SSH 远程配置固件'
        required: false
        default: false
        type: boolean
  #schedule:
    #- cron:  '30 16 * * 5'

env:
  REPO_URL: https://github.com/padavanonly/immortalwrt-mt798x
  REPO_BRANCH: openwrt-21.02
  FEEDS_CONF: mt798x/feeds.conf.default
  CONFIG_FILE: mt798x/360-T7-108M.config
  DTS_NAME: mt7981-360-t7-108M.dts
  DIY_P1_SH: mt798x/diy-part1.sh
  DIY_P2_SH: mt798x/diy-part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@main
      
    - name: Check server configuration
      run: |
        echo "警告⚠"
        echo "若分配的服务器性能不足，务必及时取消，重新运行！"
        echo "已知编译成功CPU型号：8370C,8171M"
        echo "已知性能不足CPU型号：8272CL"
        echo -e "-------------- ------------CPU信息------------------------------------------\n"
        echo "CPU物理数量:$(cat /proc/cpuinfo| grep "physical id"| sort| uniq| wc -l)"
        echo -e "CPU核心及版本信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "-------------------------------内存信息-------------------------------------------"
        echo "已安装内存详细信息："
        sudo lshw -short -C memory | grep GiB
        echo -e "\n"
        echo "-----------------------------硬盘信息---------------------------------------------"
        echo -e  "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l) \n"
        echo "硬盘详情："
        df -Th
        
    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false  
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Cache
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: '360-T7-108M'
        prefix: ${{ github.workspace }}/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        # Modify the version number
        echo CONFIG_VERSION_CODE="$(TZ=UTC-8 date "+%Y.%m.%d")" >> openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 设置无线控制界面样式
      if: github.event.inputs.USE_MTWIFI_CFG == 'true'
      run: |
        sed -i '/CONFIG_PACKAGE_luci-app-mtk=y/{N;N;N;s/CONFIG_PACKAGE_luci-app-mtk=y\nCONFIG_PACKAGE_luci-i18n-mtk-zh-cn=y\nCONFIG_PACKAGE_wifi-profile=y\nCONFIG_WIFI_NORMAL_SETTING=y/CONFIG_PACKAGE_lua-cjson=y\nCONFIG_PACKAGE_luci-app-mtwifi-cfg=y\nCONFIG_PACKAGE_luci-i18n-mtwifi-cfg-zh-cn=y\nCONFIG_PACKAGE_mtwifi-cfg=y/}' openwrt/.config

    - name: 设置 nx30pro eeprom
      if: github.event.inputs.USE_NX30PRO_EEPROM == 'true'
      run: |
        mkdir openwrt/target/linux/mediatek/mt7981/base-files/lib/firmware
        cp mt798x/eeprom/nx30pro_eeprom.bin openwrt/target/linux/mediatek/mt7981/base-files/lib/firmware/MT7981_iPAiLNA_EEPROM.bin
        sed -i 's/caldata_extract_mmc/# caldata_extract_mmc/' openwrt/target/linux/mediatek/mt7981/base-files/lib/preinit/90_extract_caldata
        sed -i 's#./files/mt7981-default-eeprom/MT7981_iPAiLNA_EEPROM.bin##' openwrt/package/mtk/drivers/mt_wifi/Makefile

    - name: 设置 dts 52MHz闪存频率
      if: github.event.inputs.USE_52MHZ == 'true'
      run: |
        sed -i -e '/bus-width = <8>;/ a\	cap-mmc-highspeed;' openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/$DTS_NAME
        sed -i 's/26000000/52000000/g' openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/$DTS_NAME
        grep max-frequency openwrt/target/linux/mediatek/files-5.4/arch/arm64/boot/dts/mediatek/$DTS_NAME
    
    - name: SSH 远程连接（make menuconfig)
      uses: P3TERX/ssh2actions@v1.0.0
      if: (github.event.inputs.ssh == 'true' && github.event.inputs.ssh  != 'false') || contains(github.event.action, 'ssh')
            
    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 V=s
        echo "COMPILE_STATUS=success" >> $GITHUB_ENV 
        # grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)_DEVICE.*=y/\1/' > DEVICE_NAME
        echo "mediatek_mt7981_360-T7-108M" > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_ENV
        echo "COMPILE_TIME=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

#    - name: Upload bin directory
#      uses: actions/upload-artifact@main
#      if: env.COMPILE_STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
#      with:
#        name: ${{ env.DEVICE_NAME }}_bin_${{ env.FILE_DATE }}
#        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.COMPILE_STATUS == 'success' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "ORGANIZE_STATUS=success" >> $GITHUB_ENV

    - name: Upload firmware to action artifact
      uses: actions/upload-artifact@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      with:
        name: OpenWrt_firmware_${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Upload OpenWrt Firmware to Release
      id: release
      uses: ncipollo/release-action@main
      if: env.ORGANIZE_STATUS == 'success' && env.UPLOAD_RELEASE == 'true' && (!cancelled())
      with:
        name: ${{ env.DEVICE_NAME }}_${{ env.FILE_DATE }}
        tag: v${{ env.FILE_DATE }}
        removeArtifacts: false
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        token: ${{ secrets.GITHUB_TOKEN }}
        body: |
            360-T7-108M 固件，基于padavanonly/immortalwrt-mt798x/openwrt-21.02, kernel 5.4, 编译时间: ${{ env.COMPILE_TIME }}
            Default IP: 192.168.2.1
            Default username: root
            Default password: none
            插件列表： 
              ├ ddns
              ├ filetransfer
              ├ OpenClash
              ├ SmartDNS
              ├ ttyd
              ├ adbyby-plus
              ├ zerotier
              └ KMS

    - name: Delete workflow runs
      uses: Mattraks/delete-workflow-runs@main
      if: env.ORGANIZE_STATUS == 'success' && (!cancelled())
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        retain_days: 3
        keep_minimum_runs: 2
        delete_workflow_pattern: "${{ env.DEVICE_NAME }}"

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@master
      if: env.ORGANIZE_STATUS == 'success' && !cancelled()
      with:
        repo: ${{ github.repository }}
        keep_latest: 2
        delete_tag_pattern: '${{ env.DEVICE_NAME }}'
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}